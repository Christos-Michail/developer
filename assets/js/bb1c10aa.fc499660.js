"use strict";(self.webpackChunkdeveloper_site=self.webpackChunkdeveloper_site||[]).push([[197],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,u=d["".concat(l,".").concat(m)]||d[m]||h[m]||o;return n?a.createElement(u,i(i({ref:t},c),{},{components:n})):a.createElement(u,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2711:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],s={title:"Task manager",sidebar_label:"Task manager"},l=void 0,p={unversionedId:"platform/task-manager",id:"platform/task-manager",isDocsHomePage:!1,title:"Task manager",description:"The task manager component is the one responsible for storing and maintaining",source:"@site/docs/platform/task-manager.md",sourceDirName:"platform",slug:"/platform/task-manager",permalink:"/developer/docs/platform/task-manager",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/platform/task-manager.md",tags:[],version:"current",lastUpdatedAt:1643192825,formattedLastUpdatedAt:"1/26/2022",frontMatter:{title:"Task manager",sidebar_label:"Task manager"},sidebar:"pilot",previous:{title:"Profile manager",permalink:"/developer/docs/platform/profile-manager"},next:{title:"Interaction protocol engine",permalink:"/developer/docs/platform/interaction-protocol-engine"}},c=[],h={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The task manager component is the one responsible for storing and maintaining\nthe task and task types. "),(0,o.kt)("p",null,"A task is used to coordinate a set of WeNet users to do something. It is defined\nby the next fields:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"id"),"  identifier of the task."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"goal"),"  the objective to reach. In other words why the users cooperate."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"requesterId"),"  the identifier of the user that has created the task."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"_creationTs"),"  the difference, measured in seconds, between the time when the task\nis created and midnight, January 1, 1970 UTC."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"_lastUpdateTs"),"  the difference, measured in seconds, between the time when the task\nis updated and midnight, January 1, 1970 UTC."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"closeTs"),"  the difference, measured in seconds, between the time when the task\nis considered done (closed) and midnight, January 1, 1970 UTC."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"appId"),"  identifier of the application where the task is associated."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"communityId"),"  identifier of the community where the task is associated."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"taskTypeId"),"  identifier of the type. It defines the common behaviours\nallowed to the users when interacting on the task."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"attributes"),"  the JSON object with the values that instantiate the task.\nThe possible values are defined by the type."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"norms"),"  that modify the default behaviour defined by the type. If you want\nto read more about how to define norms read the ",(0,o.kt)("a",{parentName:"li",href:"https://internetofus.github.io/developer/docs/tech/conversation/norms"},"WeNet developer documentation")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"transactions"),"  the historic list of transactions that have been done in\nthe task. Also, each transaction has the information of the application messages\nthat have been sent to the users that are involved in the task.")),(0,o.kt)("p",null,"On the other hand, the task type defines what the users can do in a task. For\nthis purpose has the next fields:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"id"),"  identifier of the task type."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"name"),"  of the type."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"description"),"  of the type."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"keywords"),"  used to define the type."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"attributes"),"  is a JSON object where the fields are the possible attributes\nof the task, and the value is the name is the OpenAPI description of the possible\nvalues for the attribute."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"transactions"),"  is a JSON object where the fields are the possible labels\nof the transactions that the users can do on the task, and the value is the\nOpenAPI description of the attributes for the transaction."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"callbacks"),"  is a JSON object where the fields are the possible labels\nof the messages that the norms can send to the application for a user, and\nthe value is the OpenAPI description of the attributes for the message."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"norms"),"  that describe the possible behaviour can do in a task of this type.\nIf you want to read more about how to define norms read the ",(0,o.kt)("a",{parentName:"li",href:"https://internetofus.github.io/developer/docs/tech/conversation/norms"},"WeNet developer documentation"))),(0,o.kt)("p",null,"The next JSON is an example of a task type that echo the received transaction\nto the same user."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n   "id":"wenet_echo_v1",\n   "name":"Echo",\n   "description":"This tasks echo the transaction messages",\n   "keywords":[\n      "example",\n      "test"\n   ],\n   "transactions":{\n      "echo":{\n         "type":"object",\n         "description":"Send the echo message",\n         "properties":{\n            "message":{\n               "type":"string",\n               "description":"The message to echo"\n            }\n         }\n      }\n   },\n   "callbacks":{\n      "echo":{\n         "type":"object",\n         "properties":{\n            "taskId":{\n               "type":"string",\n               "description":"The identifier of the task"\n            },\n            "communityId":{\n               "type":"string",\n               "description":"The identifier of the community"\n            },\n            "message":{\n               "type":"string",\n               "description":"The echo message"\n            }\n         }\n      }\n   },\n   "norms":[\n      {\n         "whenever":"is_received_created_task()",\n         "thenceforth":"add_created_transaction()"\n      },\n      {\n         "whenever":"is_received_do_transaction(\'echo\',Content)",\n         "thenceforth":"add_message_transaction() and send_user_message(\'echo\',Content)"\n      }\n   ]\n}\n\n')))}d.isMDXComponent=!0}}]);